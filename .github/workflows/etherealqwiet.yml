# This workflow integrates qwiet.ai preZero with GitHub
# Visit https://docs.shiftleft.io for help
name: qwiet.ai.pr.br.bf

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ethereal Engine
        uses: actions/checkout@v3
      - name: Checkout ee-development-test-suite
        uses: actions/checkout@v3
        with:
          repository: etherealengine/ee-development-test-suite
          path: './packages/projects/projects/ee-development-test-suite'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
            package-lock.json
          key: ${{ runner.os }}-branch-build-${{ hashFiles('**/package.json') }}
      - run: cp .env.local.default .env.local
      - run: npm install --production=false --loglevel notice --legacy-peer-deps
      - name: Setup Java JDK v11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      # - name: Package with maven
      #   run: mvn clean install
      - name: Download ShiftLeft CLI
        run: |
          curl https://cdn.shiftleft.io/download/sl > ${GITHUB_WORKSPACE}/sl && chmod a+rx ${GITHUB_WORKSPACE}/sl
          ${GITHUB_WORKSPACE}/sl --version
      - name: preZero Static Analysis
        run: |
          ${GITHUB_WORKSPACE}/sl analyze --wait --verbose \
          --app Ethereal \
          --tag branch=${{ github.head_ref }} --js . -- --ignore-minified --package-json package.json --all-dependencies
        env:
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
          SHIFTLEFT_API_HOST: www.shiftleft.io
          SHIFTLEFT_GRPC_TELEMETRY_HOST: telemetry.shiftleft.io:443
          SHIFTLEFT_GRPC_API_HOST: api.shiftleft.io:443
      - name: Run Bestfix script to generate report
        shell: bash
        if: github.event_name == 'pull_request'
        run: |
          git clone https://github.com/gzttech/beautifulspoon.git
          pip3 install beautifulspoon
          git clone https://github.com/ShiftLeftSecurity/field-integrations.git
          pip3 install -r field-integrations/shiftleft-utils/requirements.txt
          python3 field-integrations/shiftleft-utils/bestfix.py -a ${{ github.event.repository.name }} -o $GITHUB_WORKSPACE/ngsast-bestfix-report.html
          bspoon $GITHUB_WORKSPACE/ngsast-bestfix-report.html --select body > $GITHUB_WORKSPACE/qwiet.html
          # Install pandoc
          sudo apt-get update
          sudo apt-get install -y pandoc
          # Convert HTML to plain text using pandoc
          pandoc $GITHUB_WORKSPACE/ngsast-bestfix-report.html -t plain -o bestfix_output.txt
          BESTFIX_OUTPUT=$(cat bestfix_output.txt)
          BESTFIX_BODY=$(jq -n --rawfile body bestfix_output.txt '{body: $body}')
          echo "${BESTFIX_BODY}" > bestfix_body.json
          url="https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues/${{github.event.number}}/comments"
          curl -s -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${GH_API_TOKEN}" -d @bestfix_body.json "${url}"
        env:
          GH_API_TOKEN: ${{ secrets.API_TOKEN }}
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}

      - name: Validate Build Rules
        id: validate-build-rules
        run: |
          ${GITHUB_WORKSPACE}/sl check-analysis --app Ethereal \
          --github-pr-number=${{github.event.number}} \
          --github-pr-user=${{ github.repository_owner }} \
          --github-pr-repo=${{ github.event.repository.name }} \
          --github-token=${{ secrets.GITHUB_TOKEN }} > $GITHUB_WORKSPACE/sl_output.txt 2>&1
        env:
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
          SHIFTLEFT_API_HOST: www.shiftleft.io
          SHIFTLEFT_GRPC_TELEMETRY_HOST: telemetry.shiftleft.io:443
          SHIFTLEFT_GRPC_API_HOST: api.shiftleft.io:443
      - name: Debug Check
        run: |
          echo "Contents of the current directory:"
          ls -la $GITHUB_WORKSPACE
          echo "Contents of the sl_output.txt file:"
          cat $GITHUB_WORKSPACE/sl_output.txt
      - name: Create GitHub Issue with Build-Rules Output
        if: always()
        run: |
          if [ -f "$GITHUB_WORKSPACE/sl_output.txt" ]; then
            OUTPUT=$(cat $GITHUB_WORKSPACE/sl_output.txt)
            echo "Output captured: $OUTPUT"
          else
            OUTPUT="No output captured from sl check-analysis."
          fi
          CURRENT_DATE=$(date '+%Y-%m-%d')
          ISSUE_BODY=$(jq -n --arg title "Qwiet preZero scan $CURRENT_DATE" --arg body "$OUTPUT" '{title: $title, body: $body}')
          echo "${ISSUE_BODY}" > issue_body.json
          curl -s -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${GH_API_TOKEN}" -d @issue_body.json "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues"
        env:
          GH_API_TOKEN: ${{ secrets.API_TOKEN }}
